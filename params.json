{
  "name": "Mybatis-pagination",
  "tagline": "MySQL pagination plugin for MyBatis",
  "body": "# MyBatis pagination support for MySQL 5.x\r\n\r\nMyBatis comes with pagination support. Using `RowBounds` plugin, you can limit the result set(see [Supplied Plugins](http://mybatis.org/generator/reference/plugins.html)).\r\n\r\nHowever, it does not work the way you might think it should. Run the following code block:\r\n\r\n```java\r\n@Autowired\r\nprivate MysqlUserDao dao;\r\n\r\n@Test\r\npublic void testGetUsers() {\r\n    final int offset = 1;\r\n    final int limit = 10;\r\n\r\n    MysqlUserExample example = new MysqlUserExample();\r\n    example.createCriteria()\r\n            .andHostIsNotNull()\r\n            ;\r\n\r\n    RowBounds bounds = new RowBounds(offset, limit);\r\n    List<MysqlUser> users = dao.getUsers(example, bounds);\r\n    assertThat(users, notNullValue());\r\n}\r\n```\r\n\r\nand see the query logging behind the hood:\r\n\r\n```\r\n==>  Preparing: select Host, User, Password, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv, Reload_priv, Shutdown_priv, Process_priv, File_priv, Grant_priv, References_priv, Index_priv, Alter_priv, Show_db_priv, Super_priv, Create_tmp_table_priv, Lock_tables_priv, Execute_priv, Repl_slave_priv, Repl_client_priv, Create_view_priv, Show_view_priv, Create_routine_priv, Alter_routine_priv, Create_user_priv, Event_priv, Trigger_priv, Create_tablespace_priv, ssl_type, max_questions, max_updates, max_connections, max_user_connections, plugin, password_expired, is_role from user WHERE ( Host is not null )\r\n==> Parameters:\r\n<==    Columns: Host, User, Password, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv, Reload_priv, Shutdown_priv, Process_priv, File_priv, Grant_priv, References_priv, Index_priv, Alter_priv, Show_db_priv, Super_priv, Create_tmp_table_priv, Lock_tables_priv, Execute_priv, Repl_slave_priv, Repl_client_priv, Create_view_priv, Show_view_priv, Create_routine_priv, Alter_routine_priv, Create_user_priv, Event_priv, Trigger_priv, Create_tablespace_priv, ssl_type, max_questions, max_updates, max_connections, max_user_connections, plugin, password_expired, is_role\r\n<==        Row: localhost, root, , Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, , 0, 0, 0, 0, , N, N\r\n<==        Row: jadens.local, root, , Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, , 0, 0, 0, 0, , N, N\r\n<==        Row: 127.0.0.1, root, , Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, , 0, 0, 0, 0, , N, N\r\n<==        Row: ::1, root, , Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, , 0, 0, 0, 0, , N, N\r\n<==        Row: localhost, , , N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, , 0, 0, 0, 0, , N, N\r\n<==        Row: jadens.local, , , N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, , 0, 0, 0, 0, , N, N\r\n<==      Total: 6\r\n```\r\n\r\nAs you might notice, there is no `limit` in the generated query. MyBatis does not come with the native support for MySQL. MyBatis does not know anything about `limit` and not use it to filter the result set. It retrieves all the relevant records into memory and filters out unnecessary records there. A disaster in the production!\r\n\r\nYou should implement your own MyBatis plugin to make [`RowBounds plugin`](http://mybatis.org/generator/reference/plugins.html) use MySQL's `limit` feature. Unfortunately, many implementation examples out there have their own flaws. That is the reason why I have implemented my own plugin for myself and you.\r\n\r\nWith the simple plugin configuration, your life will be much easier:\r\n\r\n```xml\r\n<!-- XML-based -->\r\n<bean id=\"PaginationInterceptor\" class=\"net.andromedarabbit.mybatis.pagination.plugin.PaginationInterceptor\"/>\r\n<bean id=\"PaginationResultSetHandler\" class=\"net.andromedarabbit.mybatis.pagination.plugin.PaginationResultSetHandlerInterceptor\"/>\r\n\r\n<bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\r\n    <property name=\"dataSource\" ref=\"dataSource\" />\r\n    <property name=\"plugins\">\r\n        <array>\r\n            <ref bean=\"PaginationInterceptor\" />\r\n            <ref bean=\"PaginationResultSetHandler\" />\r\n        </array>\r\n    </property>\r\n</bean>\r\n```\r\n\r\nor with Java annotation configuration:\r\n\r\n```java\r\n// Annotation-based\r\n@Bean\r\npublic SqlSessionFactoryBean sqlSessionFactoryBean(\r\n       DataSource dataSource,\r\n       ApplicationContext applicationContext) throws IOException {\r\n\r\n   SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean();\r\n   factoryBean.setDataSource(dataSource);\r\n   factoryBean.setPlugins(new Interceptor[]{\r\n           new PaginationInterceptor(),\r\n           new PaginationResultSetHandlerInterceptor()\r\n   });\r\n   return factoryBean;\r\n}\r\n```\r\n\r\n\r\nSee the query logging again:\r\n\r\n```\r\n==>  Preparing: select Host, User, Password, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv, Reload_priv, Shutdown_priv, Process_priv, File_priv, Grant_priv, References_priv, Index_priv, Alter_priv, Show_db_priv, Super_priv, Create_tmp_table_priv, Lock_tables_priv, Execute_priv, Repl_slave_priv, Repl_client_priv, Create_view_priv, Show_view_priv, Create_routine_priv, Alter_routine_priv, Create_user_priv, Event_priv, Trigger_priv, Create_tablespace_priv, ssl_type, max_questions, max_updates, max_connections, max_user_connections, plugin, password_expired, is_role from user WHERE ( Host is not null ) limit ?, ?\r\n==> Parameters: 1(Integer), 10(Integer)\r\n<==    Columns: Host, User, Password, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv, Reload_priv, Shutdown_priv, Process_priv, File_priv, Grant_priv, References_priv, Index_priv, Alter_priv, Show_db_priv, Super_priv, Create_tmp_table_priv, Lock_tables_priv, Execute_priv, Repl_slave_priv, Repl_client_priv, Create_view_priv, Show_view_priv, Create_routine_priv, Alter_routine_priv, Create_user_priv, Event_priv, Trigger_priv, Create_tablespace_priv, ssl_type, max_questions, max_updates, max_connections, max_user_connections, plugin, password_expired, is_role\r\n<==        Row: jadens.local, root, , Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, , 0, 0, 0, 0, , N, N\r\n<==        Row: 127.0.0.1, root, , Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, , 0, 0, 0, 0, , N, N\r\n<==        Row: ::1, root, , Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, , 0, 0, 0, 0, , N, N\r\n<==        Row: localhost, , , N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, , 0, 0, 0, 0, , N, N\r\n<==        Row: jadens.local, , , N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, , 0, 0, 0, 0, , N, N\r\n<==      Total: 5\r\n```\r\n\r\n\r\nYou can see the difference. The generated query uses `limit` and the result set is smaller than the previous one.\r\n\r\n## Supported databases\r\n\r\n* MySQL 5.x\r\n* MariaDB 5.x / 10.x\r\n\r\n## Adding to your project\r\n\r\nYou can add **mybatis-pagination** to your project by using [Jitpack](https://jitpack.io/#andromedarabbit/mybatis-pagination):\r\n\r\n### Gradle dependencies\r\n\r\n```gradle\r\nallprojects {\r\n\trepositories {\r\n\t\t...\r\n\t\tmaven { url \"https://jitpack.io\" }\r\n\t}\r\n}\r\n\r\ndependencies {\r\n  compile 'com.github.andromedarabbit:mybatis-pagination:0.0.1'\r\n}\r\n```\r\n\r\n### Maven dependencies\r\n\r\n```xml\r\n<repositories>\r\n  <repository>\r\n    <id>jitpack.io</id>\r\n    <url>https://jitpack.io</url>\r\n\t</repository>\r\n</repositories>\r\n\r\n<dependency>\r\n  <groupId>com.github.andromedarabbit</groupId>\r\n  <artifactId>mybatis-pagination</artifactId>\r\n  <version>0.0.1</version>\r\n</dependency>\r\n```\r\n\r\n## Build the project by yourself\r\n\r\n### Prerequites\r\n\r\n* [Docker](https://www.docker.com/) is required to run the local build. **Docker for Mac** is recommended for Mac OS X users.\r\n* [Codeship Jet is required.](https://codeship.com/documentation/docker/installation/)\r\n\r\n\r\n### Build the project\r\n\r\nRun `./build.sh`, then it will build and test the whole project:\r\n\r\n```bash\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n{ContainerRunStdout=step_name:\"build\" service_name:\"app_build\"}: [INFO] Total time: 4.817 s\r\n[INFO] Finished at: 2016-05-25T15:56:56+09:00\r\n{ContainerRunStdout=step_name:\"build\" service_name:\"app_build\"}: [INFO] Final Memory: 22M/151M\r\n[INFO] ------------------------------------------------------------------------\r\n{StepFinished=step_name:\"build\" type:STEP_FINISHED_TYPE_SUCCESS}\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}